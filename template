{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Creates VPC, Subnets, Route Tables, SG, External Application ExLB, ASG for PANW firewall and Lambda Infrastructure for the VM-Series firewall",
  "Parameters" : {
    "AccountNumbers" : {
      "Description" : "List of Account Numbers",
      "Type" : "CommaDelimitedList"
    },
    "KeyPANWFirewall": {
      "Type" : "String",
      "Description": "API Key associated to username/password of the VM-Series Firewall. By default it is pandemo/demopassword. Link to how to generate API key: https://docs.paloaltonetworks.com/pan-os/10-0/pan-os-panorama-api/get-started-with-the-pan-os-xml-api/get-your-api-key.html",
      "Default": "LUFRPT1Zd2pYUGpkMUNrVEZlb3hROEQyUm95dXNGRkU9N0d4RGpTN2VZaVZYMVVoS253U0p6dlk3MkM0SDFySEh2UUR4Y3hzK2g3ST0=",
      "AllowedPattern": "[\\S0-9a-zA-Z]+",
      "ConstraintDescription" : "The PAN FW API key is required.",
      "NoEcho" : "true"
    },
    "KeyPANWPanorama": {
      "Type" : "String",
      "Description": "API Key associated to username/password of the Panorama. Link to how to generate API key: https://docs.paloaltonetworks.com/pan-os/10-0/pan-os-panorama-api/get-started-with-the-pan-os-xml-api/get-your-api-key.html",
      "NoEcho" : "true"
    },
    "PanoramaAdminUser": {
      "Type" : "String",
      "Description": "Enter the admin username for the Panorama instance",
      "MinLength" : "3",
      "MaxLength" : "63"
    },
    "BootstrapS3Bucket": {
      "Type" : "String",
      "Description": "Enter the name of the Bootstrap S3 bucket for the VM-Series firewall",
      "MinLength" : "3",
      "MaxLength" : "63"
    },
    "PanFwAmiId": {
    	"Type": "AWS::EC2::Image::Id",
    	"Description": "Link to Ami Id lookup table: https://www.paloaltonetworks.com/documentation/global/compatibility-matrix/vm-series-firewalls/aws-cft-amazon-machine-images-ami-list"
    },
    "KeyName" : {
       "Description" : "Amazon EC2 Key Pair",
       "Type" : "AWS::EC2::KeyPair::KeyName"
    },
    "FWInstanceType": {
      "Type": "String",
      "Default": "m4.xlarge",
      "AllowedValues": [
        "m5.xlarge",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m3.xlarge",
        "m3.2xlarge",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge"
      ],
      "Description": "Enter the instance type and size that you want for the AutoScaled VM-Series firewall"
    },
    "NumberOfAZs": {
        "Description" : "Total Number of AZs which will be used in this deployment (minimum 2 zones)",
        "Type" : "Number",
        "MinValue" : "2",
        "Default" : "2",
        "MaxValue" : "4"
    },
    "VpcAzs": {
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
      "Description": "Enter the list of Availability Zones (Based on Number of AZs above)"
    },
    "TGWId": {
      "Type": "String",
      "Description": "Enter the Id of Transit Gateway if need to protect east west and outbound traffic."
    },
    "LambdaS3Bucket": {
      "Type" : "String",
      "Description": "VM-Series firewall Lambda/Scripts/CFT template S3 Bucket or your own in the same region",
      "MinLength" : "3",
      "MaxLength" : "63"
    },
    "Debug": {
      "Type": "String",
      "Default": "No",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Enable/Disable debug. Default is disabled"
    }        
  },
  "Mappings": {
    "BucketRegionMap" : {
      "LambdaRegion"      : { "DefaultRegion": "panw-aws-autoscale-v30" }
    },
    "KeyMap" : {
      "Key"     : { "Key": "panw-aws.zip" }
    },



    "ASGScaleMap" : {
      "MaxInstances"        : { "ASG": "5" },
      "ScaleUpThreshold"    : {"ASG": "80" },
      "ScaleDownThreshold"  : {"ASG": "20" },
      "ScalingParam"        : {"CPU": "DataPlaneCPUUtilizationPct", "AS": "panSessionActive", "SU": "panSessionUtilization", "SSPU":"panSessionSslProxyUtilization", "GPU": "panGPGatewayUtilizationPct", "GPAT": "panGPGWUtilizationActiveTunnels", "DPB": "DataPlanePacketBufferUtilization"},
      "ScalingPeriod"        : {"ASG": "900" }
    }  
  },
  "Conditions" : {
    "PANWScript" : {"Fn::Equals" : [ {"Ref": "LambdaS3Bucket" }, { "Fn::FindInMap" : [ "BucketRegionMap", "LambdaRegion", "DefaultRegion" ]}]},
    "CreateSubnet2more" : {"Fn::Or": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "2"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]}]},
    "CreateSubnet3more" : { "Fn::Or": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]}]},
    "CreateSubnet1" : {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "1"]},
    "CreateSubnet2" : {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "2"]},
    "CreateSubnet3" : {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]},
    "CreateSubnet4" : {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]},
    "CreateTGW" : {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]},
    "CreateTGWSubnet1more":  { "Fn::And": [ {"Fn::Or": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "1"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "2"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]}]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]}]},
    "CreateTGWSubnet2more":  { "Fn::And": [ {"Fn::Or": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "2"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]}]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]}]},
    "CreateTGWSubnet3more":  { "Fn::And": [ { "Fn::Or":[ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]}, {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]}]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]}]},
    "CreateTGWSubnet1":  { "Fn::And": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "1"]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]} ]},
    "CreateTGWSubnet2": { "Fn::And": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "2"]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]} ]},
    "CreateTGWSubnet3": { "Fn::And": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "3"]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]} ]},
    "CreateTGWSubnet4": { "Fn::And": [ {"Fn::Equals" : [{"Ref" : "NumberOfAZs"}, "4"]}, {"Fn::Not" : [ {"Fn::Equals" : [{"Ref" : "TGWId"}, ""]}]} ]}

  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
      {
        "Label" : {"default": "VPC Configuration"},
        "Parameters" : [ "NumberOfAZs", "VpcAzs", "VpcCidr"]
      },    
      {
        "Label" : {"default": "VM-Series firewall Instance configuration"},
        "Parameters" : ["PanFwAmiId", "KeyName", "FWInstanceType","Debug"]
      },
      {
        "Label" : {"default": "S3 Bucket details"},
        "Parameters" : ["BootstrapS3Bucket", "LambdaS3Bucket"]
      },
      {
        "Label" : {"default": "VM-Series API Key and Panorama username"},
        "Parameters" : ["KeyPANWFirewall", "KeyPANWPanorama", "PanoramaAdminUser"]
      },
      {
        "Label" : {"default": "Other Parameters"},
        "Parameters" : ["AccountNumbers", "TGWId"]
      }
      ],
      "ParameterLabels" : {
        "PanFwAmiId": {"default": "AMIId of PANFW Image:"},
        "KeyName": {"default": "Key pair:"},
        "FWInstanceType" : {"default": "Firewall Instance Type:"},
        "BootstrapS3Bucket": {"default": "Bootstrap bucket for VM-Series firewalls"},
        "LambdaS3Bucket": {"default": "S3 Bucket Name for Lambda Code:"},
        "KeyPANWFirewall": {"default": "API Key for Firewall:"},
        "KeyPANWPanorama": {"default": "API Key for Panorama:"},
        "PanoramaAdminUser": {"default": "Admin username for Panorama:"},
        "VpcAzs": {"default": "Select AZs:"},
        "NumberOfAZs": {"default": "Number of AZs:"},
        "VpcCidr": {"default": "VPC CIDR:"},
        "AZSubnetIDTrust": {"default": "Subnet ID of Trust Interface:"},
        "Debug": {"default": "Enable Debug Log:"},
        "TGWId" : {"default": "Transit Gateway Id:"},
        "AccountNumbers": {"default": "Account Numbers"}
      }                 
    }                   
  },
  "Resources" : {


    "EIP1" : {
       "Type" : "AWS::EC2::EIP",
       "Properties" : {
          "Domain" : "VPC"
       },
       "DependsOn": [ "VPC", "GatewayToInternet", "IGW" ]
    },
    "EIP2" : {
       "Type" : "AWS::EC2::EIP",
       "Condition" : "CreateSubnet2more",
       "Properties" : {
          "Domain" : "VPC"
       },
       "DependsOn": [ "VPC", "GatewayToInternet", "IGW" ]
    },
    "EIP3" : {
       "Type" : "AWS::EC2::EIP",
       "Condition" : "CreateSubnet3more",
       "Properties" : {
          "Domain" : "VPC"
       },
       "DependsOn": [ "VPC", "GatewayToInternet", "IGW" ]
    },
    "EIP4" : {
       "Type" : "AWS::EC2::EIP",
       "Condition" : "CreateSubnet4",
       "Properties" : {
          "Domain" : "VPC"
       },
       "DependsOn": [ "VPC", "GatewayToInternet", "IGW" ]
    },



    "LambdaMGMTRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "LambdaMGMTRouteTable1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATGW1" }
      },
      "DependsOn": [ "NATGW1" ]
    },

    "LambdaMGMTRoute2" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "RouteTableId" : { "Ref" : "LambdaMGMTRouteTable2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATGW2" }
      },
      "DependsOn": [ "NATGW2" ]
    },

    "NATGWSubnetAz1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ "0", {"Ref" : "VpcAzs"} ] },
        "MapPublicIpOnLaunch": true,
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::If" : [ "CreateSubnet1", { "Fn::Select" : [ 1, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 5, 4] } ] },{"Fn::If" :[ "CreateSubnet2", { "Fn::Select" : [ 2, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 10, 4] } ] },  {"Fn::If" :[ "CreateSubnet3", { "Fn::Select" : [ 3, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 15, 4] } ] }, { "Fn::Select" : [ 4, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 20, 4] } ] } ]} ]} ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "NATGW" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NATGWSubnetAz1" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },

    "NATGWSubnetAz2" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ "1", {"Ref" : "VpcAzs"} ] },
        "MapPublicIpOnLaunch": true,
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : {"Fn::If" :[ "CreateSubnet2", { "Fn::Select" : [ 3, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 10, 4] } ] },  {"Fn::If" :[ "CreateSubnet3", { "Fn::Select" : [ 4, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 15, 4] } ] }, { "Fn::Select" : [ 5, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 20, 4] } ] } ]} ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "NATGW" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NATGWSubnetAz2" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },

    "NATGW1" : {
       "Type" : "AWS::EC2::NatGateway",
       "Properties" : {
          "AllocationId" : { "Fn::GetAtt" : ["EIP1", "AllocationId"]},
          "SubnetId" : { "Ref" : "NATGWSubnetAz1"}
       },
       "DependsOn" : [ "VPC", "EIP1", "NATGWSubnetAz1", "GatewayToInternet" ]
    },

    "NATGW2" : {
       "Type" : "AWS::EC2::NatGateway",
       "Condition" : "CreateSubnet2more",
       "Properties" : {
          "AllocationId" : { "Fn::GetAtt" : ["EIP2", "AllocationId"]},
          "SubnetId" : { "Ref" : "NATGWSubnetAz2"}
       },
       "DependsOn" : [ "VPC", "EIP2", "NATGWSubnetAz2", "GatewayToInternet" ]
    },

    "NATGWRouteTable1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NATGWRouteTable1" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },
    "NATGWRouteTable2" : {
      "Type" : "AWS::EC2::RouteTable",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NATGWRouteTable2" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },

    "NATGWRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "NATGWRouteTable1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGW" }
      },
      "DependsOn": [ "NATGWRouteTable1", "GatewayToInternet" ]
    },
    "NATGWRoute2" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "RouteTableId" : { "Ref" : "NATGWRouteTable2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGW" }
      },
      "DependsOn": [ "NATGWRouteTable2", "GatewayToInternet" ]
    },

    "NATSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "NATGWSubnetAz1" },
        "RouteTableId" : { "Ref" : "NATGWRouteTable1" }
      },
      "DependsOn": [ "NATGWRouteTable1", "NATGWSubnetAz1" ]
    },
    "NATSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "SubnetId" : { "Ref" : "NATGWSubnetAz2" },
        "RouteTableId" : { "Ref" : "NATGWRouteTable2" }
      },
      "DependsOn": [ "NATGWRouteTable2", "NATGWSubnetAz2" ]
    },

    "TRUSTSubnetAz1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ "0", {"Ref" : "VpcAzs"} ] },
        "MapPublicIpOnLaunch": true,
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::If" : [ "CreateSubnet1", { "Fn::Select" : [ 4, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 5, 4] } ] },{"Fn::If" :[ "CreateSubnet2", { "Fn::Select" : [ 8, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 10, 4] } ] },  {"Fn::If" :[ "CreateSubnet3", { "Fn::Select" : [ 12, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 15, 4] } ] }, { "Fn::Select" : [ 16, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 20, 4] } ] } ]} ]} ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "TRUST" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "TRUSTSubnetAz1" ] ] }}
        ]
      },
      "DependsOn": [ "VPC","IGW" ]
    },
    "TRUSTSubnetAz2" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ "1", {"Ref" : "VpcAzs"} ] },
        "MapPublicIpOnLaunch": true,
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : {"Fn::If" :[ "CreateSubnet2", { "Fn::Select" : [ 9, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 10, 4] } ] },  {"Fn::If" :[ "CreateSubnet3", { "Fn::Select" : [ 13, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 15, 4] } ] }, { "Fn::Select" : [ 17, { "Fn::Cidr" : [ {"Ref": "VpcCidr"}, 20, 4] } ] } ]} ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "TRUST" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "TRUSTSubnetAz2" ] ] }}
        ]
      },
      "DependsOn": [ "VPC","IGW" ]
    },

    "TRUSTRouteTableAz1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "TRUSTRouteTableAz1" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },

    "TRUSTRouteTableAz2" : {
      "Type" : "AWS::EC2::RouteTable",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "TRUSTRouteTableAz2" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },

    "TRUSTRouteNAT1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "TRUSTRouteTableAz1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATGW1" }
      },
      "DependsOn": [ "TRUSTRouteTableAz1", "NATGW1" ]
    },

    "TRUSTRouteNAT2" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "RouteTableId" : { "Ref" : "TRUSTRouteTableAz2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATGW2" }
      },
      "DependsOn": [ "TRUSTRouteTableAz2", "NATGW2" ]
    },

    "TRUSTSubnetRouteTableAssociationNAT1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "TRUSTSubnetAz1" },
        "RouteTableId" : { "Ref" : "TRUSTRouteTableAz1" }
      },
      "DependsOn": [ "TRUSTRouteNAT1", "TRUSTSubnetAz1" ]
    },
    "TRUSTSubnetRouteTableAssociationNAT2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "CreateSubnet2more",
      "Properties" : {
        "SubnetId" : { "Ref" : "TRUSTSubnetAz2" },
        "RouteTableId" : { "Ref" : "TRUSTRouteTableAz2" }
      },
      "DependsOn": ["TRUSTSubnetAz2"]
    },

    "FirewallBootstrapRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [ {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "ec2.amazonaws.com"
                    },
                "Action": "sts:AssumeRole"
                } ]
            },
            "Path":"/",
            "Policies": [ {
                "PolicyName" : "FirewallBootstrapRolePolicy",
                "PolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": "s3:ListBucket",
                        "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref" : "BootstrapS3Bucket" } ] ] }
                    },
                    {  
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                        "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref" : "BootstrapS3Bucket" }, "/*" ] ] }
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                          "cloudwatch:*"
                        ],
                        "Resource": [
                          "*"
                        ]
                    }]
                }
            }]
        }
    },  
    "FirewallBootstrapInstanceProfile":{
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [ {
              "Ref": "FirewallBootstrapRole"
            }]
        },
        "DependsOn": [ "FirewallBootstrapRole" ]
    },
    "MgmtSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH to MGMT interface",
        "VpcId" : { "Ref" : "VPC" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "", [ { "Ref": "AWS::StackName" },  "MgmtSecurityGroup" ] ] } } ],
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22",  "CidrIp" : "0.0.0.0/0" },
				  { "IpProtocol" : "tcp", "FromPort" : "443",  "ToPort" : "443",  "CidrIp" : "0.0.0.0/0" },
				  { "IpProtocol" : "-1", "FromPort" : "-1",  "ToPort" : "-1",  "CidrIp" : { "Ref": "VpcCidr"}}],
        "SecurityGroupEgress"  : [ { "IpProtocol" : "-1", "FromPort" : "-1",  "ToPort" : "-1",  "CidrIp" : "0.0.0.0/0" }]
      }
    },
    "TrustSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for trust interface",
        "VpcId" : { "Ref" : "VPC" },
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "", [ { "Ref": "AWS::StackName" },  "TrustSecurityGroup" ] ] } } ],
        "SecurityGroupIngress" : [
            {
                "IpProtocol" : "udp",
                "FromPort" : "6081",
                "ToPort" : "6081",
                "CidrIp" : { "Ref": "VpcCidr"}
            },
            {
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp" : { "Ref": "VpcCidr"}
            }
        ],
        "SecurityGroupEgress" : [{
             "IpProtocol" : "-1",
             "FromPort" : "-1",
             "ToPort" : "-1",
             "CidrIp" : "0.0.0.0/0"
        }]
      }
    },

    "ASGNotifierRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "autoscaling.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },
    "ASGNotifierRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": { "Ref": "AWS::StackName" },
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Action": "sns:Publish",
            "Resource": { "Ref" : "LambdaENISNSTopic" }
          } ]
        },
        "Roles": [ { "Ref": "ASGNotifierRole" } ]
      },
      "DependsOn": [ "ASGNotifierRole", "LambdaENISNSTopic" ]
    },
    "InitLambda" : {
        "Type": "AWS::Lambda::Function",
        "Properties": {
            "Handler": "init.lambda_handler",
            "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
            "MemorySize" : 256,
            "Code": {
                "S3Bucket": { "Fn::If" : [ "PANWScript", { "Fn::Join": [ "-", [ "panw-aws-autoscale-v30", { "Ref": "AWS::Region" }]]}, { "Ref" : "LambdaS3Bucket" }] },
                "S3Key": { "Fn::FindInMap" : [ "KeyMap", "Key", "Key" ] }
            },
            "Runtime": "python3.6",
            "Timeout": "900",
            "VpcConfig": {
              "SubnetIds": { "Fn::If" : [ "CreateSubnet1", { "Fn::Split" : [ ":" , {"Fn::Join" : [ ":", [ { "Ref" : "LambdaMGMTSubnetAz1" } ] ] } ] },{"Fn::If" :[ "CreateSubnet2", { "Fn::Split" : [ ":" , {"Fn::Join" : [ ":", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" } ] ] } ] },{ "Fn::If" : ["CreateSubnet3", { "Fn::Split" : [ ":" , {"Fn::Join" : [ ":", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" } ] ] } ] }, { "Fn::Split" : [ ":" , {"Fn::Join" : [ ":", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" }, { "Ref" : "LambdaMGMTSubnetAz4" } ] ] } ] }]} ] }]},
              "SecurityGroupIds":  [{"Ref": "VPCSecurityGroup"}]
           }
        },
      "DependsOn": [ "LambdaExecutionRole","VPCSecurityGroup"]
      },
    "LambdaCustomResource2": {
        "Type": "AWS::CloudFormation::CustomResource",
        "Condition" : "CreateSubnet2",
        "Version" : "1.0",
        "DependsOn": [ "FwInit", "InitLambda", "TrustSecurityGroup", "MgmtSecurityGroup", "VPCSecurityGroup", "LambdaMGMTSubnetAz1", "LambdaMGMTSubnetAz2", "NATGWSubnetAz1", "NATGWSubnetAz2", "LambdaMGMTRouteTable1", "LambdaMGMTRouteTable2",
                       "NATGWRouteTable1", "NATGWRouteTable2", "LambdaMGMTRoute1", "LambdaMGMTRoute2", "NATGWRoute1", "NATGWRoute2", "LambdaMGMTSubnetRouteTableAssociation1", "LambdaMGMTSubnetRouteTableAssociation2",
                       "NATSubnetRouteTableAssociation1", "NATSubnetRouteTableAssociation2", "S3Endpoint2" ],
        "Properties" : {
            "ActNum": {"Ref": "AccountNumbers"},
            "TGWId": {"Ref": "TGWId"},
            "TgwAttId": {"Fn::If" : ["CreateTGW", {"Ref": "Attach"}, {}] },
            "ServiceToken": { "Fn::GetAtt" : ["InitLambda", "Arn"] },
            "StackName": {"Ref": "AWS::StackName"},
            "Region": {"Ref": "AWS::Region"},
            "VpcId": {"Ref": "VPC"},
            "NumberOfAZs": {"Ref": "NumberOfAZs"},
            "VpcAzs": {"Ref": "VpcAzs"},
            "SubnetIDLambdaMgmt": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" }, { "Ref" : "LambdaMGMTSubnetAz4" } ] ] } ]} ] }]},
            "SubnetIDTrust": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" }, { "Ref" : "TRUSTSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" }, { "Ref" : "TRUSTSubnetAz3" }, { "Ref" : "TRUSTSubnetAz4" } ] ] } ]} ] }]},
            "RouteTableIDTrust": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" }, { "Ref" : "TRUSTRouteTableAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" }, { "Ref" : "TRUSTRouteTableAz3" }, { "Ref" : "TRUSTRouteTableAz4" } ] ] } ]} ] }]},
            "MgmtSecurityGroup": {"Ref": "MgmtSecurityGroup"},
            "TrustSecurityGroup": {"Ref": "TrustSecurityGroup"},
            "VPCSecurityGroup": {"Ref": "VPCSecurityGroup"},
            "KeyName" : {"Ref": "KeyName"},
            "FWInstanceType" : {"Ref": "FWInstanceType"},
            "MinInstancesASG": {"Ref": "NumberOfAZs"},
            "MaximumInstancesASG" : { "Fn::FindInMap" : [ "ASGScaleMap", "MaxInstances", "ASG" ] },
            "ScaleUpThreshold" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScaleUpThreshold", "ASG" ] },
            "ScaleDownThreshold" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScaleDownThreshold", "ASG" ] },
            "ScalingParameter" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingParam", "CPU" ] },
            "ScalingPeriod" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingPeriod", "ASG" ] },
            "ImageID" : { "Ref": "PanFwAmiId" },
            "LambdaENISNSTopic": {"Ref": "LambdaENISNSTopic"},
            "FirewallBootstrapRole": {"Ref": "FirewallBootstrapInstanceProfile"},
            "LambdaExecutionRole": {"Ref": "LambdaExecutionRole"},
            "ASGNotifierRole": { "Fn::GetAtt": [ "ASGNotifierRole", "Arn" ] },
            "ASGNotifierRolePolicy": {"Ref": "ASGNotifierRolePolicy"},
            "BootstrapS3Bucket" : { "Ref" : "BootstrapS3Bucket" },
            "LambdaS3Bucket" : { "Ref" : "LambdaS3Bucket" },
            "PanS3KeyTpl" : { "Fn::FindInMap" : [ "KeyMap", "Key", "Key" ] },
            "KeyPANWFirewall" : { "Ref" : "KeyPANWFirewall" },
            "KeyPANWPanorama" : { "Ref" : "KeyPANWPanorama" },
            "PanoramaAdminUser" : { "Ref" : "PanoramaAdminUser" },
            "SubnetIDNATGW": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" }, { "Ref" : "NATGWSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" }, { "Ref" : "NATGWSubnetAz3" }, { "Ref" : "NATGWSubnetAz4" } ] ] } ]} ] }]},
            "NATGWSubnetRouteTableIds": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" }, { "Ref" : "NATGWRouteTable3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" }, { "Ref" : "NATGWRouteTable3" }, { "Ref" : "NATGWRouteTable4" } ] ] } ]} ] }]},
            "SubnetIDGWLBE": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" }, { "Ref" : "GWLBESubnetAz3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" }, { "Ref" : "GWLBESubnetAz3" }, { "Ref" : "GWLBESubnetAz4" } ] ] }, {}  ]} ] }]}]},
            "GWLBESubnetRouteTableIds": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" }, { "Ref" : "GWLBERouteTable3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" }, { "Ref" : "GWLBERouteTable3" }, { "Ref" : "GWLBERouteTable4" } ] ] }, {}  ]} ] }]}]},
            "AttSubnetRouteTableIds": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" }, { "Ref" : "AttSubnetRouteTable3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" }, { "Ref" : "AttSubnetRouteTable3" }, { "Ref" : "AttSubnetRouteTable4" } ] ] }, {}  ]} ] }]}]},
            "AttRouteTableId" :{"Fn::If" : ["CreateTGW", {"Ref": "AttTGWRouteTable"}, {}] },
            "FwInit": {"Ref": "FwInit"},
            "InitLambda": {"Ref": "InitLambda"},
            "LambdaENIQueue" : { "Ref": "LambdaENIQueue" },
            "Debug": {"Ref": "Debug" },
            "FWLaunchTemplate": {"Ref": "FWLaunchTemplate"}
         }
    },

    "LambdaCustomResource3": {
        "Type": "AWS::CloudFormation::CustomResource",
        "Condition" : "CreateSubnet3",
        "Version" : "1.0",

        "DependsOn": [ "FwInit", "InitLambda", "TrustSecurityGroup", "MgmtSecurityGroup", "VPCSecurityGroup", "LambdaMGMTSubnetAz1", "LambdaMGMTSubnetAz2","LambdaMGMTSubnetAz3","NATGWSubnetAz1", "NATGWSubnetAz2", "NATGWSubnetAz3", "LambdaMGMTRouteTable1","LambdaMGMTRouteTable2", "LambdaMGMTRouteTable3",
                       "NATGWRouteTable1", "NATGWRouteTable2", "NATGWRouteTable3", "LambdaMGMTRoute1", "LambdaMGMTRoute2", "LambdaMGMTRoute3", "NATGWRoute1", "NATGWRoute2", "NATGWRoute3", "LambdaMGMTSubnetRouteTableAssociation1", "LambdaMGMTSubnetRouteTableAssociation2", "LambdaMGMTSubnetRouteTableAssociation3",
                       "NATSubnetRouteTableAssociation1", "NATSubnetRouteTableAssociation2", "NATSubnetRouteTableAssociation3", "S3Endpoint3" ],
        "Properties" : {
            "ActNum": {"Ref": "AccountNumbers"},
            "TGWId": {"Ref": "TGWId"},
            "TgwAttId": {"Fn::If" : ["CreateTGW", {"Ref": "Attach"}, {}] },
            "ServiceToken": { "Fn::GetAtt" : ["InitLambda", "Arn"] },
            "StackName": {"Ref": "AWS::StackName"},
            "Region": {"Ref": "AWS::Region"},
            "VpcId": {"Ref": "VPC"},
            "NumberOfAZs": {"Ref": "NumberOfAZs"},
            "VpcAzs": {"Ref": "VpcAzs"},
            "SubnetIDLambdaMgmt": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" }, { "Ref" : "LambdaMGMTSubnetAz4" } ] ] } ]} ] }]},
            "SubnetIDTrust": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" }, { "Ref" : "TRUSTSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" }, { "Ref" : "TRUSTSubnetAz3" }, { "Ref" : "TRUSTSubnetAz4" } ] ] } ]} ] }]},
            "RouteTableIDTrust": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" }, { "Ref" : "TRUSTRouteTableAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" }, { "Ref" : "TRUSTRouteTableAz3" }, { "Ref" : "TRUSTRouteTableAz4" } ] ] } ]} ] }]},
            "MgmtSecurityGroup": {"Ref": "MgmtSecurityGroup"},
            "TrustSecurityGroup": {"Ref": "TrustSecurityGroup"},
            "VPCSecurityGroup": {"Ref": "VPCSecurityGroup"},
            "KeyName" : {"Ref": "KeyName"},
            "FWInstanceType" : {"Ref": "FWInstanceType"},
            "MinInstancesASG": {"Ref": "NumberOfAZs"},
            "MaximumInstancesASG" : { "Fn::FindInMap" : [ "ASGScaleMap", "MaxInstances", "ASG" ] },
            "ScaleUpThreshold" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScaleUpThreshold", "ASG" ] },
            "ScaleDownThreshold" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScaleDownThreshold", "ASG" ] },
            "ScalingParameter" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingParam", "CPU" ] },
            "ScalingPeriod" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingPeriod", "ASG" ] },
            "ImageID" : { "Ref": "PanFwAmiId" },
            "LambdaENISNSTopic": {"Ref": "LambdaENISNSTopic"},
            "FirewallBootstrapRole": {"Ref": "FirewallBootstrapInstanceProfile"},
            "LambdaExecutionRole": {"Ref": "LambdaExecutionRole"},
            "ASGNotifierRole": { "Fn::GetAtt": [ "ASGNotifierRole", "Arn" ] },
            "ASGNotifierRolePolicy": {"Ref": "ASGNotifierRolePolicy"},
            "BootstrapS3Bucket" : { "Ref" : "BootstrapS3Bucket" },
            "LambdaS3Bucket" : { "Ref" : "LambdaS3Bucket" },
            "PanS3KeyTpl" : { "Fn::FindInMap" : [ "KeyMap", "Key", "Key" ] },
            "KeyPANWFirewall" : { "Ref" : "KeyPANWFirewall" },
            "KeyPANWPanorama" : { "Ref" : "KeyPANWPanorama" },
            "PanoramaAdminUser" : { "Ref" : "PanoramaAdminUser" },
            "SubnetIDNATGW": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" }, { "Ref" : "NATGWSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" }, { "Ref" : "NATGWSubnetAz3" }, { "Ref" : "NATGWSubnetAz4" } ] ] } ]} ] }]},
            "NATGWSubnetRouteTableIds": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" }, { "Ref" : "NATGWRouteTable3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" }, { "Ref" : "NATGWRouteTable3" }, { "Ref" : "NATGWRouteTable4" } ] ] } ]} ] }]},
            "SubnetIDGWLBE": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" }, { "Ref" : "GWLBESubnetAz3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" }, { "Ref" : "GWLBESubnetAz3" }, { "Ref" : "GWLBESubnetAz4" } ] ] }, {}  ]} ] }]}]},
            "GWLBESubnetRouteTableIds": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" }, { "Ref" : "GWLBERouteTable3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" }, { "Ref" : "GWLBERouteTable3" }, { "Ref" : "GWLBERouteTable4" } ] ] }, {}  ]} ] }]}]},
            "AttSubnetRouteTableIds": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" }, { "Ref" : "AttSubnetRouteTable3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" }, { "Ref" : "AttSubnetRouteTable3" }, { "Ref" : "AttSubnetRouteTable4" } ] ] }, {}  ]} ] }]}]},
            "AttRouteTableId" :{"Fn::If" : ["CreateTGW", {"Ref": "AttTGWRouteTable"}, {}] },
            "FwInit": {"Ref": "FwInit"},
            "InitLambda": {"Ref": "InitLambda"},
            "LambdaENIQueue" : { "Ref": "LambdaENIQueue" },
            "Debug": {"Ref": "Debug" },
            "FWLaunchTemplate": {"Ref": "FWLaunchTemplate"}
         }
    },

    "LambdaCustomResource4": {
        "Type": "AWS::CloudFormation::CustomResource",
        "Condition" : "CreateSubnet4",
        "Version" : "1.0",

        "DependsOn": [ "FwInit", "InitLambda", "TrustSecurityGroup", "MgmtSecurityGroup", "VPCSecurityGroup", "LambdaMGMTSubnetAz1", "LambdaMGMTSubnetAz2","LambdaMGMTSubnetAz3","LambdaMGMTSubnetAz4","NATGWSubnetAz1", "NATGWSubnetAz2", "NATGWSubnetAz3","NATGWSubnetAz4", "LambdaMGMTRouteTable1","LambdaMGMTRouteTable2", "LambdaMGMTRouteTable3","LambdaMGMTRouteTable4",
                       "NATGWRouteTable1", "NATGWRouteTable2", "NATGWRouteTable3", "NATGWRouteTable4", "LambdaMGMTRoute1", "LambdaMGMTRoute2", "LambdaMGMTRoute3","LambdaMGMTRoute4", "NATGWRoute1", "NATGWRoute2", "NATGWRoute3", "NATGWRoute4","LambdaMGMTSubnetRouteTableAssociation1", "LambdaMGMTSubnetRouteTableAssociation2", "LambdaMGMTSubnetRouteTableAssociation3","LambdaMGMTSubnetRouteTableAssociation4",
                       "NATSubnetRouteTableAssociation1", "NATSubnetRouteTableAssociation2", "NATSubnetRouteTableAssociation3", "NATSubnetRouteTableAssociation4", "S3Endpoint4" ],

        "Properties" : {
            "ActNum": {"Ref": "AccountNumbers"},
            "TGWId": {"Ref": "TGWId"},
            "TgwAttId": {"Fn::If" : ["CreateTGW", {"Ref": "Attach"}, {}] },
            "ServiceToken": { "Fn::GetAtt" : ["InitLambda", "Arn"] },
            "StackName": {"Ref": "AWS::StackName"},
            "Region": {"Ref": "AWS::Region"},
            "VpcId": {"Ref": "VPC"},
            "NumberOfAZs": {"Ref": "NumberOfAZs"},
            "VpcAzs": {"Ref": "VpcAzs"},
            "SubnetIDLambdaMgmt": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "LambdaMGMTSubnetAz1" }, { "Ref" : "LambdaMGMTSubnetAz2" }, { "Ref" : "LambdaMGMTSubnetAz3" }, { "Ref" : "LambdaMGMTSubnetAz4" } ] ] } ]} ] }]},
            "SubnetIDTrust": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" }, { "Ref" : "TRUSTSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTSubnetAz1" }, { "Ref" : "TRUSTSubnetAz2" }, { "Ref" : "TRUSTSubnetAz3" }, { "Ref" : "TRUSTSubnetAz4" } ] ] } ]} ] }]},
            "RouteTableIDTrust": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" }, { "Ref" : "TRUSTRouteTableAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "TRUSTRouteTableAz1" }, { "Ref" : "TRUSTRouteTableAz2" }, { "Ref" : "TRUSTRouteTableAz3" }, { "Ref" : "TRUSTRouteTableAz4" } ] ] } ]} ] }]},
            "MgmtSecurityGroup": {"Ref": "MgmtSecurityGroup"},
            "TrustSecurityGroup": {"Ref": "TrustSecurityGroup"},
            "VPCSecurityGroup": {"Ref": "VPCSecurityGroup"},
            "KeyName" : {"Ref": "KeyName"},
            "FWInstanceType" : {"Ref": "FWInstanceType"},
            "MinInstancesASG": {"Ref": "NumberOfAZs"},
            "MaximumInstancesASG" : { "Fn::FindInMap" : [ "ASGScaleMap", "MaxInstances", "ASG" ] },
            "ScaleUpThreshold" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScaleUpThreshold", "ASG" ] },
            "ScaleDownThreshold" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScaleDownThreshold", "ASG" ] },
            "ScalingParameter" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingParam", "CPU" ] },
            "ScalingPeriod" : { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingPeriod", "ASG" ] },
            "ImageID" : { "Ref": "PanFwAmiId" },
            "LambdaENISNSTopic": {"Ref": "LambdaENISNSTopic"},
            "FirewallBootstrapRole": {"Ref": "FirewallBootstrapInstanceProfile"},
            "LambdaExecutionRole": {"Ref": "LambdaExecutionRole"},
            "ASGNotifierRole": { "Fn::GetAtt": [ "ASGNotifierRole", "Arn" ] },
            "ASGNotifierRolePolicy": {"Ref": "ASGNotifierRolePolicy"},
            "BootstrapS3Bucket" : { "Ref" : "BootstrapS3Bucket" },
            "LambdaS3Bucket" : { "Ref" : "LambdaS3Bucket" },
            "PanS3KeyTpl" : { "Fn::FindInMap" : [ "KeyMap", "Key", "Key" ] },
            "KeyPANWFirewall" : { "Ref" : "KeyPANWFirewall" },
            "KeyPANWPanorama" : { "Ref" : "KeyPANWPanorama" },
            "PanoramaAdminUser" : { "Ref" : "PanoramaAdminUser" },
            "SubnetIDNATGW": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" }, { "Ref" : "NATGWSubnetAz3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "NATGWSubnetAz1" }, { "Ref" : "NATGWSubnetAz2" }, { "Ref" : "NATGWSubnetAz3" }, { "Ref" : "NATGWSubnetAz4" } ] ] } ]} ] }]},
            "NATGWSubnetRouteTableIds": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" }, { "Ref" : "NATGWRouteTable3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "NATGWRouteTable1" }, { "Ref" : "NATGWRouteTable2" }, { "Ref" : "NATGWRouteTable3" }, { "Ref" : "NATGWRouteTable4" } ] ] } ]} ] }]},
            "SubnetIDGWLBE": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" }, { "Ref" : "GWLBESubnetAz3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBESubnetAz1" }, { "Ref" : "GWLBESubnetAz2" }, { "Ref" : "GWLBESubnetAz3" }, { "Ref" : "GWLBESubnetAz4" } ] ] }, {}  ]} ] }]}]},
            "GWLBESubnetRouteTableIds": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" }, { "Ref" : "GWLBERouteTable3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "GWLBERouteTable1" }, { "Ref" : "GWLBERouteTable2" }, { "Ref" : "GWLBERouteTable3" }, { "Ref" : "GWLBERouteTable4" } ] ] }, {}  ]} ] }]}]},
            "AttSubnetRouteTableIds": { "Fn::If" : [ "CreateTGWSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" } ] ] }, {"Fn::If" :[ "CreateTGWSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" } ] ] }, { "Fn::If" : ["CreateTGWSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" }, { "Ref" : "AttSubnetRouteTable3" } ] ] } , { "Fn::If" : ["CreateTGWSubnet4", {"Fn::Join" : [ ",", [ { "Ref" : "AttSubnetRouteTable1" }, { "Ref" : "AttSubnetRouteTable2" }, { "Ref" : "AttSubnetRouteTable3" }, { "Ref" : "AttSubnetRouteTable4" } ] ] }, {}  ]} ] }]}]},
            "AttRouteTableId" :{"Fn::If" : ["CreateTGW", {"Ref": "AttTGWRouteTable"}, {}] },
            "FwInit": {"Ref": "FwInit"},
            "InitLambda": {"Ref": "InitLambda"},
            "LambdaENIQueue" : { "Ref": "LambdaENIQueue" },
            "Debug": {"Ref": "Debug" },
            "FWLaunchTemplate": {"Ref": "FWLaunchTemplate"}
         }
    },

    "FWLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
        "Properties": {
          "LaunchTemplateName": {"Fn::Join" : [ "-", [{"Ref":"AWS::StackName"}, "PANW-Firewall-LaunchTemplate" ]] },
          "LaunchTemplateData": {
            "ImageId": { "Ref": "PanFwAmiId" },
            "InstanceType": { "Ref": "FWInstanceType" },
            "KeyName": { "Ref": "KeyName"},
            "NetworkInterfaces": [
                {
                    "AssociatePublicIpAddress": "false",
                    "DeviceIndex": 0,
                    "Groups": [{ "Fn::GetAtt" : ["TrustSecurityGroup", "GroupId"] }]
                }
            ],
            "IamInstanceProfile": {
              "Arn": {"Fn::GetAtt" : ["FirewallBootstrapInstanceProfile", "Arn"] }
            },
            "EbsOptimized": "true",
            "BlockDeviceMappings" :
            [
                {
                  "DeviceName" : "/dev/xvda",
                  "Ebs" :
                  {
                    "VolumeType" : "gp2",
                    "DeleteOnTermination" : "true"
                  }
                }
            ],
            "UserData":  { "Fn::Base64" : { "Fn::Join" : ["", [
              "vmseries-bootstrap-aws-s3bucket=",  { "Ref" : "BootstrapS3Bucket" }, "\nmgmt-interface-swap=enable"
            ]]}}
          }
        }
    }
  },
  "Outputs" : {
    "ScalingParameter": {
      "Value": { "Fn::FindInMap" : [ "ASGScaleMap", "ScalingParam", "CPU" ] },
      "Description": "Scaling Parameter you have selected"
    },
    "KeyName": {
      "Value": { "Ref": "KeyName" },
      "Description": "Key Pair you have selected for SSH"
    },
    "Attach": {
      "Value": {"Ref": "Attach"},
      "Condition" : "CreateTGW",
      "Description": "attachment Id of the security VPC attachment"
    },
    "NATGatewayIPs": {
      "Value": { "Fn::If" : [ "CreateSubnet1", {"Fn::Join" : [ ",", [ { "Ref" : "EIP1" } ] ] },{"Fn::If" :[ "CreateSubnet2", {"Fn::Join" : [ ",", [ { "Ref" : "EIP1" }, { "Ref" : "EIP2" } ] ] } ,{ "Fn::If" : ["CreateSubnet3", {"Fn::Join" : [ ",", [ { "Ref" : "EIP1" }, { "Ref" : "EIP2" }, { "Ref" : "EIP3" } ] ] } , {"Fn::Join" : [ ",", [ { "Ref" : "EIP1" }, { "Ref" : "EIP2" }, { "Ref" : "EIP3" }, { "Ref" : "EIP4" } ] ] } ]} ] }]},
      "Description": "Public IPs on NAT Gateways"
    },
    "BootstrapS3Bucket": {
      "Value": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref" : "BootstrapS3Bucket" } ] ] },
      "Description": "Your Bootstrap bucket being used for this deployment"
    },
    "LambdaS3Bucket": {
      "Value": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Fn::If" : [ "PANWScript", { "Fn::Join": [ "-", [ { "Fn::FindInMap" : [ "BucketRegionMap", "LambdaRegion", "DefaultRegion" ]}, { "Ref": "AWS::Region" }]]}, { "Ref" : "LambdaS3Bucket" }] }] ] },
      "Description": "Your Template/Lambda Code bucket being used for this deployment"
    },
    "LambdaCodeFile": {
      "Value": { "Fn::FindInMap" : [ "KeyMap", "Key", "Key" ] },
      "Description": "File name of the Lambda Code being run"
    }
  }
}